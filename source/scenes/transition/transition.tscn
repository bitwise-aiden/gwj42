[gd_scene load_steps=14 format=2]

[ext_resource path="res://source/scenes/transition/transition.gd" type="Script" id=1]
[ext_resource path="res://assets/sprites/opponents/amon_ra_portrait_rock.png" type="Texture" id=2]
[ext_resource path="res://assets/materials/portrait.material" type="Material" id=3]
[ext_resource path="res://assets/sprites/opponents/chicomecoatl_portrait.png" type="Texture" id=4]

[sub_resource type="Shader" id=7]
code = "shader_type canvas_item; 

uniform sampler2D noise;
uniform float threshold: hint_range(0.0, 1.0);

vec2 texture_size(sampler2D tex)
{
	ivec2 size = textureSize(tex, 0);
	return vec2(size);
}

void fragment() 
{
	vec4 color = vec4(0.0);
	
	vec2 size = texture_size(noise);
	
	vec2 position = size * UV; 
	vec2 position_grid = floor(position / 20.0) * 20.0;
	vec2 uv_grid = position_grid / size;

	float noise_value = texture(noise, uv_grid).r;
	
	if (noise_value < threshold)
	{
		color = vec4(0.0, 0.0, 0.0, 1.0);
	}

	COLOR = color;
}"

[sub_resource type="OpenSimplexNoise" id=10]
octaves = 9
period = 20.0
persistence = 0.25

[sub_resource type="NoiseTexture" id=9]
width = 1280
height = 720
noise = SubResource( 10 )

[sub_resource type="ShaderMaterial" id=8]
shader = SubResource( 7 )
shader_param/threshold = 0.0
shader_param/noise = SubResource( 9 )

[sub_resource type="Shader" id=5]
code = "shader_type canvas_item; 

uniform sampler2D noise;

uniform vec4 color_base: hint_color;

uniform vec4 color_border: hint_color;
uniform float border_size: hint_range(0.0, 0.1);

uniform float direction: hint_range(-1.0, 1.0) = -1.0;

uniform float edge_size: hint_range( 0.0, 0.2);


void fragment() 
{
	vec4 color = color_base;
	
	vec2 uv = mod(vec2(UV.x * 0.25 + TIME * direction, 0.0), 1.0); 
	uv.y = UV.y;
	float noise_value = texture(noise, uv).r; 
	
	if (noise_value > 0.65) 
	{
		color = mix(vec4(1.0), color_base, 0.4);
	} 
	
	if (UV.y < border_size || UV.y > 1.0 - border_size) 
	{
		color = color_border;
	}
	
	float edge_offset = ((sin(uv.y * 10.0 + TIME * 10.0) + 1.0) / 2.0) * edge_size;
	if (UV.x + edge_offset <  edge_size || UV.x - edge_offset > 1.0 - edge_size) 
	{
		color = vec4(0.0);
	}
	
	COLOR = color;
}"

[sub_resource type="OpenSimplexNoise" id=3]
octaves = 1
period = 30.0

[sub_resource type="NoiseTexture" id=4]
seamless = true
noise = SubResource( 3 )

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 5 )
shader_param/color_base = Color( 0.545098, 0.160784, 0.160784, 1 )
shader_param/color_border = Color( 0.564706, 0.564706, 0.564706, 1 )
shader_param/border_size = 0.05
shader_param/direction = -1.0
shader_param/edge_size = 0.041
shader_param/noise = SubResource( 4 )

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 5 )
shader_param/color_base = Color( 0.160784, 0.266667, 0.545098, 1 )
shader_param/color_border = Color( 0.564706, 0.564706, 0.564706, 1 )
shader_param/border_size = 0.05
shader_param/direction = 1.0
shader_param/edge_size = 0.021
shader_param/noise = SubResource( 4 )

[node name="transition" type="Node2D"]
z_index = 100
script = ExtResource( 1 )

[node name="color_fade" type="ColorRect" parent="."]
material = SubResource( 8 )
anchor_right = 1.0
anchor_bottom = 1.0
margin_right = 1280.0
margin_bottom = 720.0
mouse_filter = 2
color = Color( 0, 0, 0, 0 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="color_opponent" type="ColorRect" parent="."]
material = SubResource( 2 )
margin_left = -1480.0
margin_top = 130.0
margin_bottom = 330.0
mouse_filter = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="texture_opponent" type="TextureRect" parent="color_opponent"]
material = ExtResource( 3 )
margin_left = 1130.0
margin_right = 1386.0
margin_bottom = 256.0
rect_scale = Vector2( 0.781, 0.781 )
mouse_filter = 2
texture = ExtResource( 2 )
flip_h = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="color_player" type="ColorRect" parent="."]
material = SubResource( 6 )
margin_left = 1280.0
margin_top = 390.0
margin_right = 2760.0
margin_bottom = 590.0
mouse_filter = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="texture_player" type="TextureRect" parent="color_player"]
material = ExtResource( 3 )
margin_left = 150.0
margin_right = 406.0
margin_bottom = 256.0
rect_scale = Vector2( 0.781, 0.781 )
mouse_filter = 2
texture = ExtResource( 4 )
__meta__ = {
"_edit_use_anchors_": false
}
